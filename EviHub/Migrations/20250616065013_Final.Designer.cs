// <auto-generated />
using System;
using Evihub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EviHub.Migrations
{
    [DbContext(typeof(EviHubDbContext))]
    [Migration("20250616065013_Final")]
    partial class Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationId"));

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DesignationId");

                    b.HasIndex("DesignationName")
                        .IsUnique();

                    b.ToTable("Designations");

                    b.HasData(
                        new
                        {
                            DesignationId = 1,
                            DesignationName = "Intern"
                        });
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderName = "Male"
                        });
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            ManagerId = 1,
                            Email = "vvsteja23311@gmail.com",
                            EmpId = 1001,
                            FirstName = "Sai",
                            LastName = "Teja",
                            Mobile = "89387632"
                        });
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectName")
                        .IsUnique();

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            IsActive = true,
                            ProjectDescription = "khdcjkdf",
                            ProjectName = "One"
                        });
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Skills", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SkillId");

                    b.HasIndex("SkillName")
                        .IsUnique();

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Certification", b =>
                {
                    b.Property<int>("CertificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationId"));

                    b.Property<string>("CertificationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CertificationId");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("EviHub.Models.Entities.CertificationCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("CertificationCategories");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Certificationprogress", b =>
                {
                    b.Property<int>("CertificationProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificationProgressId"));

                    b.Property<int>("CertificationId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("completionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CertificationProgressId");

                    b.HasIndex("CertificationId");

                    b.HasIndex("EmpId");

                    b.ToTable("Certificationprogress");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmpId = 1001,
                            DOB = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DesignationId = 1,
                            Email = "sai.teja@evihub.com",
                            EmergencyContact = "9876543211",
                            FirstName = "Sai",
                            GenderId = 1,
                            Id = 1,
                            Interests = "AI, Cricket",
                            IsAdmin = true,
                            LastName = "Teja",
                            ManagerId = 1,
                            Mobile = "9876543210",
                            Password = "jhdc",
                            ProjectId = 1,
                            Username = "kjd"
                        },
                        new
                        {
                            EmpId = 1002,
                            DOB = new DateTime(1999, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DesignationId = 1,
                            Email = "anjali.sharma@evihub.com",
                            EmergencyContact = "9123456790",
                            FirstName = "Anjali",
                            GenderId = 1,
                            Id = 2,
                            Interests = "Machine Learning, Reading",
                            IsAdmin = false,
                            LastName = "Sharma",
                            ManagerId = 1,
                            Mobile = "9123456789",
                            Password = "jhdc",
                            ProjectId = 1,
                            Username = "kjd"
                        });
                });

            modelBuilder.Entity("EviHub.Models.Entities.EmployeeProject", b =>
                {
                    b.Property<int>("EmpProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpProjectId"));

                    b.Property<int>("AssignedBy")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("EmpProjectId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjects");
                });

            modelBuilder.Entity("EviHub.Models.Entities.EmployeeSkills", b =>
                {
                    b.Property<int>("EmployeeSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeSkillId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeSkillId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Proposal", b =>
                {
                    b.Property<int>("ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProposalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProposalDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProposalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProposalId");

                    b.HasIndex("EmpId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("EviHub.Models.Entities.ProposalWork", b =>
                {
                    b.Property<int>("ProposalWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProposalWorkId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProposalId")
                        .HasColumnType("int");

                    b.HasKey("ProposalWorkId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ProposalId");

                    b.ToTable("ProposalWorks");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Certificationprogress", b =>
                {
                    b.HasOne("EviHub.Models.Entities.Certification", "Certification")
                        .WithMany("Certificationprogress")
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.Models.Entities.Employee", "Employee")
                        .WithMany("Certificationprogress")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certification");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Employee", b =>
                {
                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Designation", "Designation")
                        .WithMany("Employee")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Gender", "Gender")
                        .WithMany("Employees")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Manager", "Manager")
                        .WithMany("EmployeesUnderManager")
                        .HasForeignKey("ManagerId");

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Project", "Project")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Designation");

                    b.Navigation("Gender");

                    b.Navigation("Manager");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EviHub.Models.Entities.EmployeeProject", b =>
                {
                    b.HasOne("EviHub.Models.Entities.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Project", "Project")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EviHub.Models.Entities.EmployeeSkills", b =>
                {
                    b.HasOne("EviHub.Models.Entities.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.EviHub.Core.Entities.MasterData.Skills", "Skills")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Proposal", b =>
                {
                    b.HasOne("EviHub.Models.Entities.Employee", "Employee")
                        .WithMany("Proposals")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.Models.Entities.ProposalWork", b =>
                {
                    b.HasOne("EviHub.Models.Entities.Employee", "Employee")
                        .WithMany("ProposalWorks")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EviHub.Models.Entities.Proposal", "Proposal")
                        .WithMany("ProposalWorks")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Designation", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Gender", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Manager", b =>
                {
                    b.Navigation("EmployeesUnderManager");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Project", b =>
                {
                    b.Navigation("EmployeeProject");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EviHub.EviHub.Core.Entities.MasterData.Skills", b =>
                {
                    b.Navigation("EmployeeSkills");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Certification", b =>
                {
                    b.Navigation("Certificationprogress");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Employee", b =>
                {
                    b.Navigation("Certificationprogress");

                    b.Navigation("EmployeeProjects");

                    b.Navigation("EmployeeSkills");

                    b.Navigation("ProposalWorks");

                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("EviHub.Models.Entities.Proposal", b =>
                {
                    b.Navigation("ProposalWorks");
                });
#pragma warning restore 612, 618
        }
    }
}
